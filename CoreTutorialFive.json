{"basePath":"https://api.point.io/v2","apiVersion":"2.0","swaggerVersion":"1.1","resourcePath":"/","apis":[{"path":"/auth.{format}","operations":[{"summary":"Authenticate to Point.io API","httpMethod":"POST","nickname":"Auth","notes":"The first call authenticates an existing Point.io user to use an existing Point.io app. Use the value of SESSIONKEY value to perform all following API calls.","parameters":[{"name":"email","description":"Valid Point.io account username (email address).","dataType":"String","paramType":"query","required":true},{"name":"password","description":"Point.io account password.","dataType":"String","paramType":"query","required":true},{"name":"apikey","description":"App ID of your Point.io application. See point.io/account for info.","dataType":"String","paramType":"query","required":true}]}]},{"path":"/storagetypes/list.{format}","operations":[{"summary":"Get the list of storage site types that your authenticated user can add storage for.","httpMethod":"GET","nickname":"Storagetypes_List","notes":"Displays the list and basic information of the storage site types available for the authenticated user to add storage for. The list is driven by the user type and user group associated with the user account. Different user types (eg. EndUser, Tester, Developer) will see different site options based on release status (GE, Beta, Alpha). Different user groups will have rights to proprietary and specialized storage sites.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"}]}]},{"path":"/storagetypes/{siteTypeId}/params.{format}","operations":[{"summary":"Get the list of specific parameters for a given storage site type.","httpMethod":"GET","nickname":"Storagetype_Params","notes":"Each storage site has a list of parameters that are unique to it. For example, FTP sites require a hostname, port, username, password and passive setting, where SharePoint storage locations require a SharePoint URL, domain name and other fields. This call displays the list of specific parameters for a given storage site type. The ideal implementation will compose a user form that collects the explicit fields requested by this call. Building your add storage capability this way allows the UI to work with changes to the parameter list without requiring client-side modifications. The parameter list in the response is structured similarly to a resultset return rather thana pure JSON array. This was done in several API calls in v1 & v2 to reduce the size of the JSON responses by eliminating redundant tags. This requires some Map parsing to match the header fieldname in the COLUMN with the associated column in the DATA row. Or better yet, just grab the needed value by position. Positions are fixed for v2. ","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of a chosen storage site type. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"numeric","required":true,"paramType":"path"}]}]},{"path":"/storagesites/create.{format}","operations":[{"summary":"Create a new storage connection to a storage site.","httpMethod":"POST","nickname":"Storagesites_Create","notes":"This call allows you to register a storage site for whom a storage connection and a default access rule will be created. The access rule can be used to perform actions on content stored in the storage site.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of your storage site. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"numeric","required":true,"paramType":"query"},{"name":"name","description":"An arbitrary, friendly name for the new storage connection and access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"enabled","description":"Use 1 (true) or 0 (false). Defines whether the site is enabled for use. Typical: 1","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[1,0]}},{"name":"loggingEnabled","description":"Use 1 (true) or 0 (false). Defines whether the site enables logging. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"indexingEnabled","description":"Use 1 (true) or 0 (false). Defines whether the site enables indexing. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"revisionControl","description":"Use 1 (true) or 0 (false). Defines whether the site enables revision control. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"maxRevisions","description":"The number of revisions to save if revision control is enabled (1). Typical: 0 (if revisionControl = 0), 3 (if revisionControl = 1)","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,2,3,4,5,10]}},{"name":"checkinCheckout","description":"Use 1 (true) or 0 (false). Defines whether the site enables library services. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"indexingEnabled","description":"Future Use: Use 0 (false). Defines whether the site enables indexing. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0]}},{"name":"siteArguments","description":"A JSON array containing required storage site FIELDNAME/value pairs as collected from the /storagetypes/{siteTypeId}/params.json call. The list is unique for each siteTypeId. (eg. {\"USERNAME\":\"testuser\",\"PASSWORD\":\"mypassword\"}) Yes, we know this should really be the body of the POST rather than a query variableâ€¦ check back for v3.","dataType":"struct","required":true,"paramType":"query"}]}]}],"models":{"Result":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"},"RESULT":{"type":"string"}},"id":"Result"},"Error":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"}},"id":"Error"},"VariableResult":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"},"RESULT":{"type":"ColData"}},"id":"VariableResult"},"ColData":{"properties":{"COLUMNS":{"type":"List","description":"An Array of strings containing labels for RESULT.DATA array indices"},"DATA":{"type":"List","description":"A List of Lists containing data fields. The data field labels are described in RESULT.COLUMNS."}},"id":"ColData"}}}
