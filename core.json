{"basePath":"https://api.point.io/v2","apiVersion":"2.0","swaggerVersion":"1.1","resourcePath":"/","apis":[{"path":"/auth.{format}","operations":[{"summary":"Authenticate to Point.io API","httpMethod":"POST","nickname":"Auth","notes":"Connects to your Point.io account and gives you your SESSIONKEY value to perform other API calls. Also displays informations about your account.","parameters":[{"name":"email","description":"Your Point.io account email address.","dataType":"String","paramType":"query","required":true},{"name":"password","description":"Your Point.io account password.","dataType":"String","paramType":"query","required":true},{"name":"apikey","description":"App ID of your Point.io application. See point.io/account for info.","dataType":"String","paramType":"query","required":true}]}]},{"path":"/accessrules/create.{format}","operations":[{"summary":"Create a new access rule for a specified storage connection.","httpMethod":"POST","nickname":"Accessrules_Create","notes":"Creates an access rules to a storage connection with the security parameters you specified.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteId","description":"The Id of the storage site you want to connect to. The siteId values of your storage sites can be found by using the /storagesites/list.json method.","dataType":"String","required":true,"paramType":"query"},{"name":"shareName","description":"An arbitrary, friendly name for the new access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"expirationDate","description":"An expiration date for this access rule as a String formatted date in the format MM/DD/YYYY.","dataType":"String","required":true,"paramType":"query"},{"name":"folderLocked","description":"Use 1 (true) or 0 (false). Defines whether users are prevented from navigating subfolders.","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"sendInviteEmail","description":"Use 1 (true) or 0 (false). Defines whether invitation email notifications are enabled.","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"inviteLink","description":"The URL of your custom share link (embedded).","dataType":"String","required":false,"paramType":"query"},{"name":"sendUninviteEmail","description":"Use 1 (true) or 0 (false). Defines whether a user receives an email notification when removed from this access rule.","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"comments","description":"Optional descriptive text to assist with future administrative operations.","dataType":"String","required":false,"paramType":"query"},{"name":"shareArguments","description":"A JSON array containing required access rule name/value pairs.","dataType":"String","required":true,"paramType":"query"},{"name":"permissions","description":"A comma seperated list of system permission IDs.","dataType":"String","required":false,"paramType":"query"},{"name":"enableNotifications","description":"Use 1 (true) or 0 (false). Defines whether email notification is enabled when actions are performed in this access rule.","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"notificationEmails","description":"Comma separated list of email addresses for email notification.","dataType":"String","required":false,"paramType":"query"},{"name":"notificationActions","description":"Comma separated list of permissions IDs to trigger notification.","dataType":"String","required":false,"paramType":"query"},{"name":"allowFilters","description":"A ruleset for which files/folders to show in the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"blockFilters","description":"A ruleset for which files/folders to block in the access rule.","dataType":"String","required":false,"paramType":"query"}]}]},{"path":"/accessrules/list.{format}","operations":[{"summary":"Get the list of your access rules.","httpMethod":"GET","nickname":"Accessrules_List","notes":"Displays the list of your current access rules, as well as infos about their related storage connections.","responseClass":"VariableResult","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","paramType":"header","required":true}]}]},{"path":"/accessrules/{accessruleid}/delete.{format}","operations":[{"summary":"Delete a specific access rule.","httpMethod":"GET","nickname":"Accessrules_Delete","notes":"Deletes a specific access rules. No data will be deleted from the remote storage location. {accessruleId} should be replaced with one of your shareIds found in the /accessrules/list.json method.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"accessruleid","description":"ID of the access rule you want to delete. This Id can be found under SHAREID value from the /accessrules/list.json method.","dataType":"String","required":true,"paramType":"path"}]}]},{"path":"/accessrules/{siteTypeId}/params.{format}","operations":[{"summary":"Get the list of an access rule's parameters related to a specified storage site type.","httpMethod":"GET","nickname":"Accessrules_Params","notes":"Displays the list of parameters of an access rule related to a specified storage site type.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of a chosen storage site type. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"String","required":true,"paramType":"path"}]}]},{"path":"/folders/create.{format}","operations":[{"summary":"Create a new folder at the specified path in an access rule.","httpMethod":"POST","nickname":"Folders_Create","notes":"Creates a folder in your chosen access rule, at the path specified.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderId","description":"Id of the access rule you want to browse. Use a SHAREID from a /accessrules/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder you want to browse. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder to create. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"foldername","description":"The name of the folder to create. Max 128 chars","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/checkin.{format}","operations":[{"summary":"Check in a file via an access rule.","httpMethod":"GET","nickname":"Folders_Files_Checkin","notes":"Checks in a file (remove an exclusive write lock) via an access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to checkin. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to checkin. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/checkout.{format}","operations":[{"summary":"Check out a file via an access rule.","httpMethod":"GET","nickname":"Folders_Files_Checkout","notes":"Checks out a file (lock a file for exclusive write access) via an access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to checkout. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to checkout. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/comments/create.{format}","operations":[{"summary":"Add a new comment to a file.","httpMethod":"GET","nickname":"Folders_Files_Comments_Create","notes":"Add a comment to a specified file, from a specified access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to comment. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to comment. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"comment","description":"Textual content of the comment. Max 255 chars","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/comments/delete.{format}","operations":[{"summary":"Delete a file's comment.","httpMethod":"GET","nickname":"Folders_Files_Comments_Delete","notes":"Deletes a comment from a specified access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"commentId","description":"Id of the comment to delete. Use COMMENTID value provided from a /folders/files/comments/list call.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/comments/list.{format}","operations":[{"summary":"Get a listing of comments for a specific file.","httpMethod":"GET","nickname":"Folder_Files_Comments","notes":"Gets a listing of comments for a specific file in a specified access rule.","responseClass":"VariableResult","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to list the comments of. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to list the comments of. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/delete.{format}","operations":[{"summary":"Delete a file.","httpMethod":"POST","nickname":"Folders_Files_Delete","notes":"Deletes a file from a specified access rule. Here, deleting a file means removing it from a storage site. Be careful if you don't have any other copy of this file.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to delete. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to delete. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/download.{format}","operations":[{"summary":"Download a file from an access rule.","httpMethod":"GET","nickname":"Folders_Files_Download","notes":"Downloads an existing file from the specified access rule.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to delete. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to delete. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"convertToPdf","description":"Does the file has to be converted to pdf format? False by default.","dataType":"boolean","required":false,"paramType":"query"}]}]},{"path":"/folders/files/edit.{format}","operations":[{"summary":"Open an edit session for a file via an access rule.","httpMethod":"GET","nickname":"Folders_Files_Edit","notes":"Requests a session for a user to edit a specified file from a specified access rule. This provides you with embed code to display to the user, which will open a view to the document editing interface, specific to this one document.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to edit. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to edit. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"callbackFunction","description":"The name of a javascript function to be called when the edit session has completed.","dataType":"String","required":false,"paramType":"query"},{"name":"embedwidth","description":"The desired width, in pixels, of the embedded window for the edit session. Default 800px.","dataType":"numeric","required":false,"paramType":"query"},{"name":"embedheight","description":"The desired height, in pixels, of the embedded window for the edit session. Default 600px.","dataType":"numeric","required":false,"paramType":"query"}]}]},{"path":"/folders/files/preview.{format}","operations":[{"summary":"Open an preview session for a file via an access rule.","httpMethod":"GET","nickname":"Preview","notes":"Requests a session for a user to preview a specified file from a specified access rule. This provides you with embed code to display to the user, which will open a view to the document editing interface, specific to this one document.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"fileid","description":"Id of the file to preview. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"filename","description":"Name of the file to preview. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"maxWidth","description":"The desired width, in pixels, of the embedded window for the preview session. Default 1024px.","dataType":"numeric","required":false,"paramType":"query"},{"name":"maxHeight","description":"The desired height, in pixels, of the embedded window for the preview session. Default 768px.","dataType":"numeric","required":false,"paramType":"query"},{"name":"pagenum","description":"The number of the page shown at the beginning of the preview session. Default: '1'","dataType":"String","required":false,"paramType":"query"}]}]},{"path":"/folders/files/rename.{format}","operations":[{"summary":"Rename a file via an access rule.","httpMethod":"GET","nickname":"Folders_Files_Rename","notes":"Renames a file in a specified access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"path","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"fileid","description":"Id of the file to rename. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"filename","description":"Name of the file to rename. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"newfilename","description":"The new filename to be used for the file.","dataType":"String","required":true,"paramType":"query"}]}]},{"path":"/folders/files/upload.{format}","operations":[{"summary":"Upload a file to a storage site via an access rule.","httpMethod":"POST","nickname":"Folders_Files_Upload","notes":"Uploads a file to a specified access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to upload.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to upload.","dataType":"String","required":true,"paramType":"query"},{"name":"filecontents","description":"An RFC1867 file upload. Your upload should be ENCTYPE=multipart/form-data encoded. Refer to RFC1867 for reference.","dataType":"String","required":true,"paramType":"query"},{"name":"failIfExists","description":"Boolean (false or false). Default is false. If enabled (false), uploads will fail if the file already exists. If disabled, the original file will be overwritten. If revision control is enabled, the original file will be stored as a revision level.","dataType":"boolean","required":false,"paramType":"query"},{"name":"postAuthKey","description":"default: empty String","dataType":"String","required":false,"paramType":"query"}]}]},{"path":"/folders/files/uploadastext.{format}","operations":[{"summary":"Upload text content as a file via an access rule.","httpMethod":"POST","nickname":"Folders_Files_Uploadastext","notes":"Uploads text content as a file to a storage site via an access rule. This method should be used when you are uploading or updating textual content only.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":false,"paramType":"query"},{"name":"filename","description":"Name of the file to upload.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to upload.","dataType":"String","required":true,"paramType":"query"},{"name":"textconent","description":"The textual content of your file. Default: empty String.","dataType":"String","required":false,"paramType":"query"},{"name":"failIfExists","description":"Boolean (false or false). Default is false. If enabled (false), uploads will fail if the file already exists. If disabled, the original file will be overwritten. If revision control is enabled, the original file will be stored as a revision level.","dataType":"boolean","required":false,"paramType":"query"}]}]},{"path":"/folders/list.{format}","operations":[{"summary":"Get the list of folders and files of a specific path from a specific access rule.","httpMethod":"GET","nickname":"Folders_List","notes":"Displays the list of folders and files in the chosen access rule at the specified path and gives you details about those folders and files. You can use folders details to browse them as well.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderId","description":"Id of the access rule you want to browse. Use a SHAREID from /accessrules/list.json to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder you want to browse. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":false,"paramType":"query"},{"name":"path","description":"Requested folder path for file listing. Use / for workspace root directory (default).","dataType":"String","required":false,"paramType":"query"}]}]},{"path":"/folders/{folderid}/getauthorizedembed.{format}","operations":[{"summary":"Request embed code for your authenticated user.","httpMethod":"GET","nickname":"Folders_Getauthorizedembed","notes":"Requests embed code for your authenticated user.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"folderid","description":"Id of the access rule. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"path"},{"name":"width","description":"The desired width, in pixels, of the embedded window. Default 800px.","dataType":"numeric","required":false,"paramType":"query"},{"name":"height","description":"The desired height, in pixels, of the embedded window. Default 600px.","dataType":"numeric","required":false,"paramType":"query"}]}]},{"path":"/links/create.{format}","operations":[{"summary":"Create a secure link for a file.","httpMethod":"POST","nickname":"Links_Create","notes":"Creates a secure link for a file via a specified access rule.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"shareid","description":"Id of the access rule containing the file. Use a SHAREID from a /folders/list.json call to identify the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"fileid","description":"Id of the file to create a link to. Use FILEID value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"filename","description":"Name of the file to create a link to. Use FILENAME value provided from a /folders/list.json call.","dataType":"String","required":true,"paramType":"query"},{"name":"remotepath","description":"Path of the folder containing the file. Use PATH value provided from a /folders/list.json call. Use / for access rule's root directory (default).","dataType":"String","required":true,"paramType":"query"},{"name":"containerid","description":"Id of the folder containing the file. Use a CONTAINERID provided from a /folders/list.json call. If not filled, the default selected folder will be the root directory of the access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"allowPrint","description":"Use 1 or 0. Defines whether the viewer can print a copy of the original source file. Only available for certain file types. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"allowDownloadAsPDF","description":"Use 1 (true) or 0 (false). Defines whether the viewer can download a PDF version of the original source file. Only available for certain file types. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"allowDownload","description":"Use 1 (true) or 0 (false). Defines whether the viewer can download a copy of the original source file. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"expirationDate","description":"Empty string, or a date formatted as a string in the form mm/dd/yyyy.","dataType":"String","required":false,"paramType":"query"},{"name":"password","description":"Empty string, or a plain text password challenge for the link. Default: empty String","dataType":"String","required":false,"paramType":"query"},{"name":"restrictByIP","description":"Use 1 (true) or 0 (false). Defines whether to enable link locking by IP address. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"maskDisplay","description":"Use 1 or 0. Defines whether a viewport for deterring screen capture will be overlayed when link is viewed. Default: 0","dataType":"String","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"comments","description":"Internal comments related to this link. Default: empty String","dataType":"String","required":false,"paramType":"query"}]}]},{"path":"/permissions/list.{format}","operations":[{"summary":"Retrieve a list of Point.io's system permissions","httpMethod":"GET","nickname":"Permissions_List","notes":"Retrieves a list of Point.io's system permissions (needed for creating new access rules).","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"}]}]},{"path":"/storagesites/create.{format}","operations":[{"summary":"Create a new storage connection to a storage site.","httpMethod":"POST","nickname":"Storagesites_Create","notes":"This call allows you to register a storage site for whom a storage connection and a default access rule will be created. The access rule can be used to perform actions on content stored in the storate site.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of your storage site. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"numeric","required":true,"paramType":"query"},{"name":"name","description":"An arbitrary, friendly name for the new storage connection and access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"enabled","description":"Use 1 (true) or 0 (false). Defines whether the site is enabled for use. Typical: 1","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[1,0]}},{"name":"loggingEnabled","description":"Use 1 (true) or 0 (false). Defines whether the site enables logging. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"revisionControl","description":"Use 1 (true) or 0 (false). Defines whether the site enables revision control. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"maxRevisions","description":"The number of revisions to save if revision control is enabled (1). Typical: 0 (if revisionControl = 0), 3 (if revisionControl = 1)","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,2,3,4,5,10]}},{"name":"checkinCheckout","description":"Use 1 (true) or 0 (false). Defines whether the site enables library services. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"indexingEnabled","description":"Future Use: Use 0 (false). Defines whether the site enables indexing. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0]}},{"name":"siteArguments","description":"A JSON array containing required storage site FIELDNAME/value pairs as collected from the /storagetypes/{siteTypeId}/params.json call. The list is unique for each siteTypeId. (eg. {\"USERNAME\":\"testuser\",\"PASSWORD\":\"mypassword\"})","dataType":"struct","required":true,"paramType":"query"}]}]},{"path":"/storagesites/list.{format}","operations":[{"summary":"Get the list of the storage sites you are connected to.","httpMethod":"GET","nickname":"Storagesites_List","notes":"Displays the list of storage sites you are connected to, as well as informations about the connection.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","paramType":"header","required":true}]}]},{"path":"/storagesites/{siteId}/details.{format}","operations":[{"summary":"Get the details of a storage site depending of its type.","httpMethod":"GET","nickname":"Storagesites_Details","notes":"Displays details about a specific storage site. The details of a storage site depends of its type. For example, Box type storage site details are its Authentication key and Default change root, while Sharepoint ones are its Sharepoint URL, Windows domain, Authentication key and Default change root. {siteId} should be replaced with one your siteIds found in the /storagesites/list.json method.","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteId","description":"The Id of the storage site you want details about. The siteId values of your storage sites can be found by using the /storagesites/list.json method.","dataType":"String","required":true,"paramType":"path"}]}]},{"path":"/storagesites/{siteId}/delete.{format}","operations":[{"summary":"Delete a specific storage connection.","httpMethod":"GET","nickname":"Storagesites_Delete","notes":"Deletes the storage connection, and all the related access rules, of a specific storage site. No data will be deleted from the remote storage location. {siteId} should be replaced with one of your siteIds found in the /storagesites/list.json method.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteId","description":"The Id of the storage site you want to delete. The siteId values of your storage sites can be found by using the /storagesites/list.json method.","dataType":"String","required":true,"paramType":"path"}]}]},{"path":"/storagesites/{siteId}/update.{format}","operations":[{"summary":"Update a storage site","httpMethod":"POST","nickname":"Storagesites_Update","notes":"Updates a storage site and the default access rule.","responseClass":"Error","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of your storage site. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"numeric","required":true,"paramType":"query"},{"name":"name","description":"An arbitrary, friendly name for the new storage connection and access rule.","dataType":"String","required":true,"paramType":"query"},{"name":"enabled","description":"Use 1 (true) or 0 (false). Defines whether the site is enabled for use. Typical: 1","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[1,0]}},{"name":"loggingEnabled","description":"Use 1 (true) or 0 (false). Defines whether the site enables logging. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"revisionControl","description":"Use 1 (true) or 0 (false). Defines whether the site enables revision control. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"maxRevisions","description":"The number of revisions to save if revision control is enabled (1). Typical: 0 (if revisionControl = 0), 3 (if revisionControl = 1)","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,2,3,4,5,10]}},{"name":"checkinCheckout","description":"Use 1 (true) or 0 (false). Defines whether the site enables library services. Typical: 0","dataType":"numeric","required":true,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0,1]}},{"name":"indexingEnabled","description":"Future Use: Use 0 (false). Defines whether the site enables indexing. Default: 0","dataType":"numeric","required":false,"paramType":"query","allowableValues":{"valueType":"\"LIST\"","values":[0]}},{"name":"siteArguments","description":"A JSON array containing required storage site FIELDNAME/value pairs as collected from the /storagetypes/{siteTypeId}/params.json call. The list is unique for each siteTypeId. (eg. {\"USERNAME\":\"testuser\",\"PASSWORD\":\"mypassword\"})","dataType":"struct","required":true,"paramType":"query"}]}]},{"path":"/storagetypes/list.{format}","operations":[{"summary":"Get the list of storage site types you can connect to.","httpMethod":"GET","nickname":"Storagetypes_List","notes":"Displays the list and basic informations of the storage site types you can connect to.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"}]}]},{"path":"/storagetypes/{siteTypeId}/params.{format}","operations":[{"summary":"Get the list of specific parameters for a given storage site type","httpMethod":"GET","nickname":"Storagetype_Params","notes":"Each storage site has a list of paremeters that are unique to it. For example, FTP sites require a hostname, port, username, password and passive setting, where SharePoint storage locations require a SharePoint URL, domain name and other fields. This call displays the list of specific parameters for a given storage site type.","responseClass":"Result","parameters":[{"name":"Authorization","description":"SESSIONKEY value provided by the /auth.json method.","dataType":"String","required":true,"paramType":"header"},{"name":"siteTypeId","description":"siteTypeId of a chosen storage site type. The list of storage site types with their siteTypeIds can be found by using the /storagetypes/list.json API call.","dataType":"numeric","required":true,"paramType":"path"}]}]}],"models":{"Result":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"},"RESULT":{"type":"string"}},"id":"Result"},"Error":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"}},"id":"Error"},"VariableResult":{"properties":{"ERROR":{"type":"int","description":"1 for Error, 0 for success"},"MESSAGE":{"type":"string","description":"If an error occured, this will be provided with a description of the error"},"RESULT":{"type":"ColData"}},"id":"VariableResult"},"ColData":{"properties":{"COLUMNS":{"type":"List","description":"An Array of strings containing labels for RESULT.DATA array indices"},"DATA":{"type":"List","description":"A List of Lists containing data fields. The data field labels are described in RESULT.COLUMNS."}},"id":"ColData"}}}